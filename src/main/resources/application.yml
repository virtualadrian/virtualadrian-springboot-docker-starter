server:
  address: 0.0.0.0
  port: 8080
  contextPath: /api/v1
---
spring:
  aop:
    proxy-target-class: true
  profiles: default
  banner:
    location: ./banner.txt
  devtools:
    livereload:
      enabled: true
  jpa:
    database: H2
    generate-ddl: true
  datasource:
    url: "jdbc:h2:mem:default"
    username: sa
    password:
    driverClassName: org.h2.Driver
    defaultSchema: "default"
    hibernate:
      hbm2ddl.auto: create
      hbm2ddl.method: update
      show_sql: true
      format_sql: true
      dialect: org.hibernate.dialect.H2Dialect
    hikari:
      maxPoolSize: 10
    initialize: true
---
spring:
  profiles: develop
  devtools:
    livereload:
      enabled: true
  jpa:
    database: MYSQL
    generate-ddl: false
  datasource:
    url: "jdbc:mysql://192.168.224.6:3306/servermonv1"
    username: smonapiapp
    password: Bblahblah123!
    driverClassName: com.mysql.jdbc.Driver
    defaultSchema: "servermonv1"
    hibernate:
      hbm2ddl.auto: validate
      hbm2ddl.method: update
      show_sql: true
      format_sql: true
      dialect: org.hibernate.dialect.MySQLDialect
    hikari:
      maxPoolSize: 10

---
spring:
  profiles: systems_integration
  jpa:
    database: sqlserver
    generate-ddl: false
  freemarker:
    suffix: .ftl
  datasource:
    url: "jdbc:sqlserver://127.0.0.1:1433;databaseName=CompanyService;integratedSecurity=false;"
    username: fake_qc_user
    password: password789!
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver

---
spring:
  profiles: production
  jpa:
    database: sqlserver
    generate-ddl: false
  freemarker:
    suffix: .ftl
  datasource:
    url: "jdbc:sqlserver://192.168.31.212:1433;databaseName=CompanyService;integratedSecurity=false;"
    username: fake_prod_usr
    password: password789
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
---
# JWT Auth
auth:
  secret: some-random-secret
  expires: 604800
  header: Authorization

security:
  aop:
    proxy-target-class: true
  basic:
    enabled: false

